# -*- coding: utf-8 -*-

import struct
from tools import split_bits, strip_0


class RscSemanticDefaultsObject(object):

    def __init__(self):
        self.errors = []
        self.id = None
        self.connected_labels = []

    @staticmethod
    def parse(data):
        record = RscSemanticDefaultsObject()
        record.parse_record(data)
        return record

    def info(self):
        print u'Semantic Defaults Object %s <%s> %s - %s - %s' % (
            self.idx,
            self.code,
            self.min_value,
            self.default_value,
            self.max_value,
        )

    def parse_record(self, data):
        """2.1.5 Структура таблицы  умалчиваемых значений семантики
        Каждой семантической характеристике с числовым значением (в том числе и классификатором значений) можно назначить максимальное, минимальное и умалчиваемое значение.
        Для каждой возможной семантики отдельного объекта тоже можно назначить максимальное, минимальное и умалчиваемое значение семантики для данного объекта классификатора.
        Все эти значения лежат в одной таблице.
        Записи умалчиваемых значений  относящиеся к конкретной семантике лежат в таблице подряд.
        Таблица умалчиваемых значений семантики находится по смещению на таблицу умолчаний семантики.
        Имеет общую длину, указанную в заголовке классификатора.
        Перед таблицей умалчиваемых значений семантики находится идентификатор таблицы “.DEF” (шестнадцатеричное число 0X00464544)  (не входит в длину таблицы).
        Записи таблицы умалчиваемых значений семантики постоянной длины, 32 байта.
        Количество записей на одну семантику классификатора указывается в таблице семантики.
        Смещение на записи умалчиваемых значений для конкретной семантики, указываются в таблице семантики. """

        # Назначение поля Смещение    Длина   Комментарий
        # Порядковый номер объекта    0   4   Если номер равен 0 – это умалчиваемое значение для семантики
        self.idx = struct.unpack('<I', data[0:4])[0]
        # Код семантики   4   4  Из таблицы  2.4
        self.code = struct.unpack('<I', data[4:8])[0]
        # Минимальное значение семантики  4   8
        self.min_value = struct.unpack('<d', data[8:16])[0]
        # "Значение семантики по умолчанию "  8   8
        self.default_value = struct.unpack('<d', data[16:24])[0]
        # "Максимальное значение Семантики"  8   8
        self.max_value = struct.unpack('<d', data[24:32])[0]
        # ИТОГО:  32 байта
