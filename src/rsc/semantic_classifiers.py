# -*- coding: utf-8 -*-

import struct
from tools import split_bits, strip_0


class RscSemanticClassifierObject(object):

    def __init__(self):
        self.errors = []
        self.id = None
        self.connected_labels = []

    @staticmethod
    def parse(data):
        record = RscSemanticClassifierObject()
        record.parse_record(data)
        return record

    def info(self):
        print u'Semantic Classifier Object [%s] <%s>' % (
            self.int_value,
            self.string_value,
        )

    def parse_record(self, data):
        """2.1.4 Структура таблицы классификатора значений семантики
        Для каждой семантической характеристики может быть создан классификатор значений.
        При этом для числовых характеристик одному коду обычно соответствует диапазон значений (например, ширина реки: до 5м - 1, от 5 до 10 - 2 и т.д.),
        для символьных характеристик одному коду соответствует одно значение (материал строения: дерево - 1, кирпич - 2 и т.д.).
        Если для характеристики создается классификатор значений, то в таблице семантики она объявляется числовой
        (физически ее значение - числовой код, но при работе с этой характеристикой в системе электронных карт будет отображаться логическое значение, соответствующее текущему коду).
        Записи классификатора значений относящиеся к конкретной семантике лежат в таблице подряд.
        Таблица классификатора значений семантики находится по смещению на таблицу классификатора значений семантики.
        Имеет общую длину, указанную в заголовке классификатора.
        Перед таблицей классификатора значений семантики находится идентификатор таблицы “.CLS” (шестнадцатеричное число 0X00534С43)
        (не входит в длину таблицы).
        Записи таблицы классификатора значений семантики постоянной длины, 36 байт.
        Количество записей на одну семантику классификатора указывается в таблице семантики.
        Смещение на записи классификатора значений для конкретной семантики, указываются в таблице семантики.
        """

        # Назначение поля Смещение    Длина   Комментарий
        # Числовое значение семантики 0   4
        self.int_value = struct.unpack('<I', data[0:4])[0]
        # Символьное значение семантики   4   32  ANSI
        self.string_value = strip_0(struct.unpack('<32s', data[4:36])[0]).decode('cp1251')
        # ИТОГО:   84 байта
